#chat-screen {
  background-color: var(--color-chat-screen-bg);
  height: 500vh;
}

#chat-screen .status-bar,
#chat-screen .alt-header {
  position: fixed;
  width: 100%;
  background-color: var(--color-chat-screen-bg);
  /* 스크롤을 내리면
  timestamp가 위로 올라가면서 alt-header와 status-bar의 layer 아래로 들어가면서 올라감 => 부자연스러움
  => background-color를 지정하여 해결
  But, alt-header에 status-bar와 timestamp가 가려짐
  => 또 다른 문제!!! => z-index 속성을 지정하여 해결 */
  box-sizing: border-box; /* 양 끝에 있는 요소가 잘려서 보이는 것을 고쳐줌 */
  top: 0; /* main-chat의 chat__timestamp를 좀 더 아래로 배치하기 위해 추가한 속성 */
}

#chat-screen .status-bar {
  z-index: 2; /* status-bar의 layer가
  alt-header의 layer보다 위에 위치 */
}

#chat-screen .alt-header {
  top: 10px;
  z-index: 1;
}

@keyframes fadeIn {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

@keyframes fadeIn--LeftToRight {
  from {
    transform: translateX(-30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

@keyframes fadeIn--RightToLeft {
  from {
    transform: translateX(30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.main-chat {
  margin-top: 180px; /* status-bar와 alt-header가 position: fixed(main-chat과 다른 layer에 위치함)이기 때문에 main-chat box를 직접 밑으로 내려서 배치 */
  display: flex;
  flex-direction: column;
  align-items: center;
  /* animation: fadeIn 0.8s linear; */
}

.chat__timestamp {
  background-color: #92a4b2;
  color: white;
  padding: 15px;
  border-radius: 25px;
  font-size: 14px;
  margin-bottom: 25px;
  animation: fadeIn 0.8s linear;
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 30px;
}

.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 40%;
  margin-right: 10px;
}

.message__author {
  display: block; /* span은 inline 요소이기 때문에 */
  margin-bottom: 5px; /* margin을 지정하기 위해 block */
}

.message__info {
  display: flex;
  align-items: flex-end;
}

.message__bubble {
  background-color: white;
  padding: 13px;
  font-size: 18px;
  border-radius: 15px;
  border-top-left-radius: 0px;
  /* message bubble(말풍선) 모양을 내기 위해
  왼쪽 상단의 모서리만 각지게 만들어줌 */
  margin-right: 5px;
  line-height: 20px;
}

.message__author,
.message__time {
  font-size: 14px;
  opacity: 0.8;
}

.message-row--own {
  justify-content: flex-end;
  animation: fadeIn--RightToLeft 0.8s linear;
}

.message-row--other {
  animation: fadeIn--LeftToRight 0.8s linear;
}

.message-row--own .message__bubble {
  background-color: var(--color-yellow);
  border-top-right-radius: 0px;
  border-top-left-radius: 15px;
  margin-right: 0px;
  margin-left: 5px;
}

.message__bubble img {
  width: 300px;
  height: 200px;
  border-radius: 0;
}

/* .message-row--own .message__bubble {
  order: 1;
}

.message-row--own .message__time {
  order: 0;
} */

/* info(부모 flex box)에 담긴 message__bubble과
   message__time의 배열 순서를 뒤집음
   => 위의 주석 처리한 코드와 같은 결과 */
.message-row--own .message__info {
  flex-direction: row-reverse;
}

.reply {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 5px 25px;
  box-sizing: border-box; /* padding으로 인해 요소가 안보이는 것을 방지 */
  transition: transform 0.3s ease-in-out;
}

.reply .reply__column:first-child {
  width: 10%;
}

.reply .reply__column:last-child {
  width: 90%;
  position: relative; /* 자식 요소인 icon: absolute */
}

.reply i {
  opacity: 0.5;
}

.reply input {
  padding: 12px;
  width: 100%;
  border: var(--main-border);
  border-radius: 20px;
  transition: all 0.3s ease-in-out;
}

.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: -15px;
  top: 5px;
}

/* column의 direct child인 i만 따로 선택 */
.reply__column:last-child > i {
  right: 40px;
  top: 13px;
}

.reply__column button {
  background-color: var(--color-yellow);
  border: none;
  border-radius: 50%;
  width: 30px;
  height: 30px;
}

.reply__column button i {
  opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
  outline: none;
}

.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button {
  transition: opacity 0.3s ease-in-out;
}

/* .reply 안에 focus된 자식이 있고,
그 자식이 첫번째 .reply__column 일때,
그 자식이 .fa-smile-wink 일때,
그 자식이 button 일때 */
.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
  opacity: 0;
}

.reply input:focus {
  width: 95vw;
  transform: translateX(-12%) translateY(-80px);
}

.reply:focus-within {
  transform: translateY(80px);
}
